(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{329:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[t._v("#")]),t._v(" babel")]),t._v(" "),a("p",[a("code",[t._v("Babel")]),t._v(" 是一个转换 ECMAScript 2015+ 的工具链，把高级语法转换成目标环境可用的代码。")]),t._v(" "),a("p",[a("code",[t._v("Babel")]),t._v(" 本身不对代码做任何转换，即 "),a("code",[t._v("const babel = code => code;")]),t._v("，需要配合 babel 插件（"),a("code",[t._v("plugins")]),t._v(" or "),a("code",[t._v("presets")]),t._v("）对代码做转换。")]),t._v(" "),a("h2",{attrs:{id:"名词解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#名词解释"}},[t._v("#")]),t._v(" 名词解释")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("plugins")]),t._v(" ： 插件，对代码做转换的插件工具。（配置中为数组类型，按照数组顺序依次执行）")]),t._v(" "),a("li",[a("strong",[t._v("presets")]),t._v(" ： 预设，是一组插件的集合。（配置中为数组类型，按照数组顺序 "),a("strong",[t._v("逆序")]),t._v(" 执行）")]),t._v(" "),a("li",[a("strong",[t._v("polyfill")]),t._v(" ： 对一些目标环境没有的特性做兼容处理的等价代码。")])]),t._v(" "),a("h2",{attrs:{id:"基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[t._v("#")]),t._v(" 基本使用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("安装工具库和预设环境，以及对目标环境缺失的特性做 polyfill 的文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 工具库")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev @babel/core @babel/cli @babel/preset-env\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码 polyfill")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save @babel/polyfill\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建配置文件（"),a("code",[t._v("babel.config.json")]),t._v(" or "),a("code",[t._v(".babelrc.json")]),t._v("，具体区别见下方 "),a("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"}},[t._v("配置文件命名区别")]),t._v("）")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"presets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@babel/env"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("可使用命令行对代码进行转换")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ npx babel src --out-dir lib\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("babel")]),t._v(" 中，处理代码转换全部依靠插件配置，一个配置例子如下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// babel config function 参见：https://babeljs.io/docs/en/config-files#config-function-api")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("api")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此配置只会动态计算一次，导出静态对象给 babel 使用")]),t._v("\n  api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 预设 => 一些转换插件的集合")]),t._v("\n    presets"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@babel/env'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅转译代码里使用的浏览器支持的新特性，其他特性需要额外安装 plugins")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          useBuiltIns"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'usage'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在代码中使用到环境中没有的特性时，自动载入需要的 polyfill 代码")]),t._v("\n          corejs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            proposals"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有建议的特性都用 corejs 的代码来polyfill")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单独配置插件")]),t._v("\n    plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将每个文件里用到的公共方法函数，都从 @babel/runtime 里导出，")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去掉每个文件的重复函数，减少打包体积")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@babel/plugin-transform-runtime'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"配置文件命名区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件命名区别"}},[t._v("#")]),t._v(" 配置文件命名区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("babel.config.json")]),t._v(" or "),a("code",[t._v(".babelrc.json")]),t._v(": 使用 "),a("code",[t._v("JSON5")]),t._v(" 解析，json 格式的进阶版，可注释")]),t._v(" "),a("li",[a("code",[t._v("babel.config.cjs")]),t._v(": 文件格式为 "),a("code",[t._v("commonjs")]),t._v(" 语法，配置使用 "),a("code",[t._v("module.exports = {}")]),t._v(" 导出")]),t._v(" "),a("li",[a("code",[t._v("babel.config.mjs")]),t._v(": 文件格式为 "),a("code",[t._v("ECMAScript modules")]),t._v(" 的语法，使用 "),a("code",[t._v("export")]),t._v(" 导出")]),t._v(" "),a("li",[a("code",[t._v("babel.config.js")]),t._v(": 如果 babel 配置里声明了 "),a("code",[t._v("type: module")]),t._v("，和 "),a("code",[t._v("babel.config..mjs")]),t._v(" 行为一样，否则和 "),a("code",[t._v("babel.config.cjs")]),t._v(" 行为一致，使用 "),a("code",[t._v("mocule.exports = {}")]),t._v(" 导出")])]),t._v(" "),a("h2",{attrs:{id:"一些配置插件的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些配置插件的理解"}},[t._v("#")]),t._v(" 一些配置插件的理解")]),t._v(" "),a("p",[t._v("在 babel 中有很多的插件，很容易混淆，不知道哪个该引哪个不该引，接下来分享下这些插件的作用。")]),t._v(" "),a("h3",{attrs:{id:"babel-polyfill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-polyfill"}},[t._v("#")]),t._v(" @babel/polyfill")]),t._v(" "),a("p",[t._v("这个插件用来模拟全部 es2015+ 的特性环境，会在全局原型上增加 polyfill。")]),t._v(" "),a("p",[a("strong",[t._v("注意：")]),t._v(" 在 babel 7.4.0 之后，已自动集成 "),a("code",[t._v("core-js/stable")]),t._v("(对 ECMAScript 特性做 polyfill) 和 "),a("code",[t._v("regenerator-runtime/runtime")]),t._v("(转换 generator 函数)。不需要单独引入 "),a("code",[t._v("@babel/polyfill")])]),t._v(" "),a("h3",{attrs:{id:"transform-runtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transform-runtime"}},[t._v("#")]),t._v(" transform-runtime")]),t._v(" "),a("p",[t._v("转换运行时使用 "),a("code",[t._v("@babel/runtime")]),t._v(" 中的 helper 函数来替代每个文件中使用的公共函数，比如 "),a("code",[t._v("_createClass")]),t._v("、"),a("code",[t._v("_inherits")]),t._v("，使得每个文件没有重复函数实现，减少打包体积。")]),t._v(" "),a("p",[t._v("转换运行时需要 2 个插件支持，"),a("code",[t._v("@babel/plugin-transform-runtime")]),t._v(" 和 "),a("code",[t._v("@babel/runtime")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# devDependencies 依赖，用来把每个文件用到的公共函数从 `@babel/runtime` 中导出")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -D @babel/plugin-transform-runtime\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装实际引用的公共代码，会被打包在最终文件中")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save @babel/runtime\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);