(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{333:function(t,s,e){"use strict";e.r(s);var a=e(33),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("img",{attrs:{src:"https://wx2.sbimg.cn/2020/06/11/docker.png",width:"300px",height:"200px"}}),t._v(" "),e("br"),e("br"),t._v(" "),e("h2",{attrs:{id:"docker-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-是什么"}},[t._v("#")]),t._v(" docker 是什么")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://docs.docker.com/get-started/overview/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker"),e("OutboundLink")],1),t._v(" 是一个集 "),e("code",[t._v("开发")]),t._v("、"),e("code",[t._v("部署")]),t._v("、"),e("code",[t._v("运行")]),t._v(" 为一身的开源引擎，方便开发者快速地搭建本地以及生产环境的基础设施和服务等等。")]),t._v(" "),e("h2",{attrs:{id:"docker-的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-的特点"}},[t._v("#")]),t._v(" docker 的特点")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("快速、一致地交付应用程序")])]),t._v(" "),e("p",[t._v("docker 通过环境独立且一致的 "),e("code",[t._v("容器")]),t._v(" 承载应用程序，在避免了开发&测试&生产环境不一致导致问题的同时，可以快速执行自动化的测试与部署。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("响应式部署和扩展")])]),t._v(" "),e("p",[t._v("docker 可以运行在各种环境中（开发人员的本地环境、数据中心的物理机或者虚拟机、或者提供云服务的环境...），基于容器的轻量级和高度可移植性，可以动态管理服务（扩大或缩减服务数量）。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("在同一硬件上运行更多的服务")])]),t._v(" "),e("p",[t._v("docker 轻量且快速，适用于高密度和中小型部署的环境。")])])]),t._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("p",[t._v("docker 可以运行在多种环境中，本文只演示 linux 下 centos 系统的 docker 安装步骤（因为我的云服务器是 centos 环境 😂 ），其他环境的安装请参照 "),e("a",{attrs:{href:"https://docs.docker.com/engine/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),e("OutboundLink")],1)]),t._v(" "),e("ol",[e("li",[e("p",[t._v("首先确认当前系统里没有装过 docker ，如果装了之前旧版的话，可以通过以下命令删除掉重新安装新版 docker。")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum remove docker "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-client "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-client-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-common "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-latest-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-engine\n")])])])]),t._v(" "),e("li",[e("p",[t._v("下载 "),e("code",[t._v("yum-utils")]),t._v(" 工具包，用于配置稳定版的 docker 远程仓库")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y yum-utils\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum-config-manager "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --add-repo "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    https://download.docker.com/linux/centos/docker-ce.repo\n")])])])]),t._v(" "),e("li",[e("p",[t._v("配置好远程 docker 仓库后，开始安装最新版的 docker")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce docker-ce-cli containerd.io\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者安装指定版本的 docker ")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce-"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("VERSION_STRING"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docker-ce-cli-"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("VERSION_STRING"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" containerd.io\n")])])])]),t._v(" "),e("li",[e("p",[t._v("此时 docker 已安装在系统当中，但是处于关闭状态，用下面的命令开启 docker")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此条命令没有任何输出，就代表启动成功")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start docker\n")])])])]),t._v(" "),e("li",[e("p",[t._v("bingo~ 快用 docker 运行一个容器试试看")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载 hello-world 容器并运行")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker run hello-world\n")])])]),e("p",[t._v("如果看到如下图所示的界面，就代表 docker 下载并成功运行起来咯！-_<")]),t._v(" "),e("img",{staticClass:"bordered",attrs:{src:"https://wx1.sbimg.cn/2020/06/11/docker-installed.png"}})])])])}),[],!1,null,null,null);s.default=r.exports}}]);